// DiskScanDoc.h : interface of the CDiskScanDoc class
//
/////////////////////////////////////////////////////////////////////////////

#if !defined(AFX_DISKSCANDOC_H__16D6846F_000D_4155_AB34_F679DBFDAF55__INCLUDED_)
#define AFX_DISKSCANDOC_H__16D6846F_000D_4155_AB34_F679DBFDAF55__INCLUDED_

#include "..\DISKTOOL\disktool.h"	// Added by ClassView
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
#include "DataDoc.h"


class CDiskDoc : public CDataDoc
{
protected: // create from serialization only
	CDiskDoc();
	DECLARE_DYNCREATE(CDiskDoc)

// Attributes
public:
	Disk* m_pDisk;   //磁盘控制对象	

// Operations
public:

	//////////////////////////////////////////////////////////////////////////
	//计算磁盘的不可分配的空间大小，这个方法第一次调用时会比较耗时，之后就没没
	//什么什么问题了
	//param
	//			secCnt	用于返回获得不可分区的扇区数,如果此域为NULL的话此域不
	//					返回任何数据
	//return 操作成功TRUE，否则FALSE
	//////////////////////////////////////////////////////////////////////////
	BOOL GetUnPartSecCount(DWORD* secCnt);

// 	//////////////////////////////////////////////////////////////////////////
// 	//已经获得了磁盘的不可分配空间的大小
// 	//是视图的一个"回调函数"
// 	//////////////////////////////////////////////////////////////////////////
// 	void GotUnpartableSecCont();//


public:
	//////////////////////////////////////////////////////////////////////////
	//打开一个磁盘，重载的MFC函数
	//////////////////////////////////////////////////////////////////////////
	virtual BOOL OnOpenDocument(LPCTSTR lpszPathName);

	//////////////////////////////////////////////////////////////////////////
	//初始化m_pContentList所指向的列表的表头
	//////////////////////////////////////////////////////////////////////////
	virtual	void InitContentListHead();
	
	//////////////////////////////////////////////////////////////////////////
	//获得当前文档所处理的设备的扇区总数,子类必须实现
	//////////////////////////////////////////////////////////////////////////
	virtual LONG_INT GetSecCount();
	
	//////////////////////////////////////////////////////////////////////////
	//向当前文档所处理的设备读取数据
	//param
	//		buf		数据缓存
	//		offset	数据在设备的上的扇区偏移
	//		isNext	如果指定的不存在是否要往下一个有效扇区 
	//				TRUE 如果offset不存在则读取下一个有效扇区
	//				FALSE 如果不存在在读取上一个有效扇区
	//		size	将要读取的数据的大小
	//return 读取数据是否成功
	//////////////////////////////////////////////////////////////////////////
	virtual BOOL ReadData(void* buf , PLONG_INT offset , BOOL isNext = TRUE , DWORD size = SECTOR_SIZE);

	//////////////////////////////////////////////////////////////////////////
	//获得显示详细信息的视图类
	//
	virtual CRuntimeClass* GetInofViewClass();

	//////////////////////////////////////////////////////////////////////////
	//设置当前选择的路径
	//param
	//		strPath	当前选择的路径
	virtual	void SetCurFile(CString strPath);

// Implementation
public:
	virtual ~CDiskDoc();
#ifdef _DEBUG
	virtual void AssertValid() const;
	virtual void Dump(CDumpContext& dc) const;
#endif

	// Overrides
	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(CTestMdiDoc)
public:
	virtual void OnCloseDocument();
	//}}AFX_VIRTUAL

// Generated message map functions
protected:
	void SetLIstContent();
	 
	 //{{AFX_MSG(CDiskDoc)
	
	 //////////////////////////////////////////////////////////////////////////
	 //列表的额点击事件的处理方法,其实这也是一个MFC函数
	 //////////////////////////////////////////////////////////////////////////
	 afx_msg /*virtual*/ void OnClickContextList(NMHDR* pNMHDR, LRESULT* pResult); 

	 //////////////////////////////////////////////////////////////////////////
	 //此消息是m_pContentList的双击击事件的相应函数也需要由子类去实现
	 //////////////////////////////////////////////////////////////////////////
	 afx_msg /*virtual*/ void OnDbClickContextList(NMHDR* pNMHDR, LRESULT* pResult);
	 
	 //////////////////////////////////////////////////////////////////////////
	 //视图发来的消息，显示上一个扇区
	 afx_msg void OnBnClickedPreSector();

	 //////////////////////////////////////////////////////////////////////////
	 //视图发来的消息，显示下一个扇区
	 afx_msg void OnBnClickedNextSector();

	 //////////////////////////////////////////////////////////////////////////
	 //视图发来的消息，显示第一个扇区
	 afx_msg void OnBnClickedFirstSector();

	 //////////////////////////////////////////////////////////////////////////
	 //视图发来的消息，显示最后一个扇区
	 afx_msg void OnBnClickedLastSector();

	 //}}AFX_MSG

	DECLARE_MESSAGE_MAP()
};

/////////////////////////////////////////////////////////////////////////////

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_DISKSCANDOC_H__16D6846F_000D_4155_AB34_F679DBFDAF55__INCLUDED_)
